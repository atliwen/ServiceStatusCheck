#默认熔断等待超时时间 就是被@HystrixCommand
#这个注解的方法最多给定设置的时间（ms）否则要不就报超时要不就走降级方法
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 60000
#默认线程池数量 被@HystrixCommand注解的方法会到一
#个线程池中去执行不是应用的主线程 这个配置值就是那个线程池的大小
hystrix.threadpool.default.coreSize: 100

#熔断信息推送评率 sendRate 这个评率是推送mq的频率，
#gatherRate这个是获取方法性能信息的频率
hystrix.stream.queue.sendRate: 5000
hystrix.stream.queue.gatherRate: 5000
#类内存信息监控说明同hystrix
metrics:
  stream:
    queue:
      send-rate: 5000
      gather-rate: 5000
spring:
  datasource:
    url: jdbc:mysql://rm-8vbv1c7m934oeot655o.mysql.zhangbei.rds.aliyuncs.com:3306/test?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&autoReconnect=true&failOverReadOnly=false&&useSSL=false
    username: atliwen1992
    password: atliwen1992
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    # druid 详细配置说明请参看官网 https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
    # 连接池配置 默认值请参看：com.alibaba.druid.pool.DruidAbstractDataSource、https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
    druid:
      filters: stat     # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat、日志用的filter:log4j、防御sql注入的filter:wall
      defaultAutoCommit: true
      initialSize: 2    # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      max-active: 10    # 最大连接池数量
      min-idle: 1       # 最小连接池数量
      max-pool-prepared-statement-per-connection-size: -1 # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-wait: 5000    # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      pool-prepared-statements: false  # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      test-on-borrow: false # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-while-idle: true # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      validation-query: SELECT 1   # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
#  mybatis-plus 配置  关闭二级缓存  更多配置   https://mybatis.plus/config/
mybatis-plus:
  configuration:
    cache-enabled: false
  mapper-locations: mapper/*.xml

#请求处理的超时时间
ribbon.ReadTimeout: 120000
#请求连接的超时时间
ribbon.ConnectTimeout: 30000

#服务端口
server:
  port: 11201
  compression:
    enabled: true
info:
  contact:
    appName: demonstration
    author: atliwen
    introduce: 演示使用事例项目

#logging:
  #  file: /home/${spring.application.name}/log/${spring.application.name}.log
#  level:
#    root: debug
#logging:
#  level:
#    root: debug
#ribbon.eager-load.enabled


#    NFLoadBalancerPingInterval

